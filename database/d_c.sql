CREATE DATABASE c_d;
USE c_d;
CREATE TABLE carrera(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE rol(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE u_status(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE registro(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  mb VARCHAR(15) NOT NULL,
  pri VARCHAR(20) NOT NULL,
  seg VARCHAR(20) NOT NULL,
  nom VARCHAR(20) NOT NULL,
  f_nac date NOT NULL,
  nss VARCHAR(15) NOT NULL,
  calle VARCHAR(20) NOT NULL,
  col VARCHAR(20) NOT NULL,
  am VARCHAR(20) NOT NULL,
  exte VARCHAR(8) NOT NULL,
  inte VARCHAR(8) NULL,
  email VARCHAR(50) NOT NULL,
  tel VARCHAR(10) NOT NULL,
  carrera int NOT NULL,
  rol int NOT NULL,
  CONSTRAINT fk_rg_carrera FOREIGN KEY (carrera) REFERENCES carrera(id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_rg_rol FOREIGN KEY (rol) REFERENCES rol(id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT uk_rg_mb UNIQUE (mb)
);
CREATE TABLE usr(
  id int NOT NULL,
  mb VARCHAR(15) PRIMARY KEY NOT NULL,
  pass VARCHAR(60) NOT NULL,
  hashh VARCHAR(60) NULL,
  statuss int NOT NULL,
  rol int NOT NULL,
  CONSTRAINT fk_u_mb FOREIGN KEY (mb) REFERENCES registro(mb) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_u_stat FOREIGN KEY (statuss) REFERENCES u_status(id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_u_rol FOREIGN KEY (rol) REFERENCES rol(id) ON UPDATE CASCADE,
  CONSTRAINT uk_u_id UNIQUE (id)
);
CREATE TABLE tipo_act(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE m_status(
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE m_estado(
    id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  descr VARCHAR(20) NOT NULL
);
CREATE TABLE actividad(
  cod VARCHAR(5) PRIMARY KEY NOT NULL,
  tipo int NOT NULL,
  descr VARCHAR(20) NOT NULL,
  prof VARCHAR(15) NOT NULL,
  lugar VARCHAR(20) NOT NULL,
  li VARCHAR(6) NULL,
  lf VARCHAR(6) NULL,
  mi VARCHAR(6) NULL,
  mf VARCHAR(6) NULL,
  mii VARCHAR(6) NULL,
  mif VARCHAR(6) NULL,
  ji VARCHAR(6) NULL,
  jf VARCHAR(6) NULL,
  vi VARCHAR(6) NULL,
  vf VARCHAR(6) NULL,
  CONSTRAINT fk_act_tipo FOREIGN KEY (tipo) REFERENCES tipo_act(id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT fk_act_prof FOREIGN KEY (prof) REFERENCES registro(mb) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE inscritos(
  id_mb VARCHAR(15) NOT NULL,
  id_act VARCHAR(5) NOT NULL,
  creditos INT CHECK(creditos >= 0),
  CONSTRAINT fk_ins_mb FOREIGN KEY (id_mb) REFERENCES registro(mb) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_ins_act FOREIGN KEY (id_act) REFERENCES actividad(cod) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE material(
  sku VARCHAR(12) NOT NULL PRIMARY KEY,
  nombre VARCHAR(15) NOT NULL,
  descr VARCHAR(30) NOT NULL,
  costo VARCHAR(10) NOT NULL CHECK (costo >0),
  tipo_ingreso VARCHAR(12) NOT NULL,
  fecha_ingreso DATE NOT NULL,
  statuss int NOT NULL,
  estado int NOT NULL,
  CONSTRAINT fk_mat_stat FOREIGN KEY (statuss) REFERENCES m_status(id) ON DELETE RESTRICT ON UPDATE CASCADE,
  CONSTRAINT uk_mat_sku UNIQUE (sku)
);
CREATE TABLE prestamo(
  id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  mb VARCHAR(12) NOT NULL,
  material VARCHAR(12) NOT NULL,
  fecha_pres DATETIME NOT NULL,
  fecha_regr DATETIME NOT NULL,
  stat_pres int NOT NULL,
  CONSTRAINT fk_pres_mb FOREIGN KEY (mb) REFERENCES registro(mb) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_pres_mat FOREIGN KEY (material) REFERENCES material(sku) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_pres_stat FOREIGN KEY (stat_pres) REFERENCES material(statuss) ON DELETE CASCADE ON UPDATE CASCADE
);
DELIMITER $$ 
CREATE TRIGGER cred_aU 
BEFORE UPDATE 
ON inscritos FOR EACH ROW 
BEGIN
  IF NEW.creditos < 0 THEN
    SET NEW.creditos=0;
  END IF;
END$$
DELIMITER ;
DELIMITER $$ 
CREATE TRIGGER costo_mat 
BEFORE INSERT 
ON material FOR EACH ROW 
BEGIN
  IF NEW.costo < 0 THEN
    SET NEW.costo=1;
  END IF;
END$$
DELIMITER ;

DELIMITER $$ 
CREATE TRIGGER Ncost_mat 
BEFORE UPDATE 
ON material FOR EACH ROW 
BEGIN
  IF NEW.costo < 0 THEN
    SET NEW.costo=1;
  END IF;
END$$
DELIMITER ;